하나는 정상적인 정보의 값들을 가정을 하고
하나는 실제로 전달되는 과정에서 생성되는 정보하고 비교를 한다면 

현재는 둘다 정보가 변하기 때문에 비교하기 어려움

한번에 어떤 값을 봐가지고 이게 공격이다 아니다 답하기는 힘들지만
누적이 되면 빗나가는듯한 값이 나온다면 확실히 아니다 라는 답을 내는게 trajectory를 사용하여 발견하는데 좋은것임

저사람이 스파이다 라고 하면 이상한 행동들이 누적되어 그 사람이 스파이라는 것을 발견하게 되는 것
그 시점이 굉장히 중요함
그런식으로 한다면 공격을 탐지하는데 trajectory가 아주 잘 사용된것임

그 trajectory만 계속 관리를 하면 됨
결국은 한순간에 작은 요인을 찾고 그걸 자꾸 점진적으로 활용하는게 trajectory임
 
planning==scheduing

미리 정한 trajectory가 그거에 맞게 실행되고 있는가 
공식적으로 trajectory를 만들어도 되고, standard한 behavior를 만들어서 검사를 해도 되고
protocol에 따라 다름!!

SEF random opportunity 한 방법임
그걸 미리 trajectory로 만드는 건 이상함.
그거에 준하는 behavior를 trajectory로 정답을 정해놓고 비교 할 수 있도록 하면 됨

trajectory도 모든 값이나 시간에 margin

언제 뭐가 일어난다가 trajectory		시간도 할당할 수 있음
모든 메시지가 그것에 해당이 될까? 		정상적인 메시지는 해당
						해당되지 않으면 정상적인 메시지가 아님(공격이 발생했다!!)
standard한 방법을 활용하는 것과 같은 방법임!

경과 시간은 다름 노드 내부 환경에 따라 다름
시간도 그렇고 그 시간에 일어나는 내용도 있고 차이가 있음!!
trajectory하나로는 확정적으로 표현은 불가능 하지만	다른일을 하는 것임 => 하나는 검증을 한거고 하나는 검증을 하지 않은 것임
그게 매 노드마다 정해져 있는 것이 아님.

또하나는 다르다면 공격이 발생했다라고 생각 했는데 다르다는 기준이 뭐인지 생각해 봐야함
어떻게 표현할것인가도 연구이고 어느정도까지의 차이를 허용할 것인가에 대한것도 연구임

CCTV에서 찍힌 장면은 현재임(현재 trajectory임)
standard는 이게 정상적인 행동이다라고 설정해놓은게 = standard trajectory이고 =>standard한 기준을 표현하는 것
=>실측 데이터도 가능함(미리 준비한 것)(결론 전에 미리 기준을 정해야 하는 것이)
=>생각을 해야할 여지가 많은것! 
=>1. 하고 안하고를 결정하는게 그 노드마다 똑같다면은 좀 쉬움, 어느 노드에서는 하고 어느 노드에서는 안하고 다름
그런 것들이 trajectory를 표현하는데 생각을 많이 해야하는게 (일정하지 않기 때문에 문제가 되는 것)그거에 따라 시간이 달라짐
그런 요소들을 고려해서 trajectory를 표현을 해야하는데 생각을 많이 해야하는 것
=>2. 표현된것을 활용하는게 또 다른 성격의 연구임! 
두 가지를 해결 하면 knowledge base로 rule을 표현하면 됨!

WSN의 경우 detect를 하기 전부터 standard trajectory가 존재해야함!

