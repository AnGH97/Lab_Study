알고리즘이 다르니깐 다른 것!!!
알고리즘이라는 것이 순차적으로 하나씩 문제를 해결해 나가는것 
그런식으로 접근을 해야지 간단하게 파악을 할 수 있음
두개의 문제가 있는데 graph가 있고 tree가 있는 경우에 tree의 경우 binary search를 graph에 적용할 수 있을까?
binary search를 하려면 정렬이 되어있어야 하는데 
찾고자 하는 값과 중앙값을 비교해서 

반은 버리기 때문에 binary search가 빨라짐
입력에 따라서 되고 안되고, domain에 따라서 되고 안되고
문제풀이 방법이 domain에 따라서 되고 안되고 대상문제, 입력 

대상 문제 영역 WSN이 문제 domain이 되는 것, 입력이 되는것 
문제를 해결한다고 생각하면 문제풀이 방법이 있고, 알고리즘이 될 수 있고, 체계가 될 수 도 있고, 문제를 직접적으로 해결하는 부분
domain 입력과 출력이 존재한다. 항상 3가지 부분을 고려해야함 별표!!!
생략이 될 수 있음 입력이 NULL인 경우 자율적으로, 자동적으로 내부적으로 문제를 해결할 수 있는 경우
입력이 NULL인 경우가 있을 수 있음
문제 풀이 방법을 아니깐 domain이 바뀌어도 설명할 수 있었음 

문제를 해결하기 위해서

추론을 통해 새로운 사실을 발견해 내는것!
forward chaining 뺑뺑 도는것!!
working memory의 초기값을 통해서 찾아내는 것이기 때문에
rule을 통해서 새로운 사실을 추론해 내는 것이기 때문에
원하는 값을 찾으면 goal을 찾아 내게 되는것!

추론 기관인 같은 둘다 forward chaining임 양쪽의 knowledge rule은 다름 rule이 다르기 때문에 추론 기관이 100%같은 것 아님
conflict resoltion이 가만히 보면 zookeeper와 bagger가 다르다!! 그것때문에 다른것임! 
conflict resolution만 빼면 다른 것은 다 같음 다른 이유는 rule구조가 다르기 때문임! rule이 여러개 있는데 마구잡이로 설정한것이 아니라
conflict resoultion하고 서로 연관 관계가 있음 그 부분을 두 expert system의 conflict resolution을 파악해야 이해를 정확하게 한것임!!
!!!!두개의 알고리즘에서 conflic resolution의 차이가 어떻게 있는지 확실히 파악해야 함!!!!!
conflict resolution의 차이를 이해하면 두가지가 어떻게 다른 것인지 알 수 있는것임!!
찾아서 완전히 이해한 뒤에 서로 방법을 바꿈(conflict resolution방법을 바꾸는것)
문제 해결이 안되는 이유를 명확하게 알 수 있을 것임!! 왜 안되는지 정확하게 설명을 할 수 있을때까지 왜 안되는지 찾아볼것!!

하는 이유 뭐를 알고자 하는 것인가 rule은 마구잡이로 쌓아 놓은 것이 아님 서로 논리적으로 연결이 되어있는것 알고리즘 내에서
독립적인 룰이지만 논리적으로 연결되어 있음 논리 구조!! 그 논리 구조를 형성 원리에 대한 논리 구조를 이해할 수 있음!! 거기가 
종착점임!!!이런식으로 진행해 나가면 됨!! 다음주 회의까지 생각해보기!! 