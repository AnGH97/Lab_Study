SEF가 탐지를 못했다는 것은 우선 당연히 생각해 봐야할 문제인데
그런 현상이 일어난 상태에서 그것을 탐지하는 것은 그것은 SEF의 문제가 아님
어떤 현상도 SEF관점에서만 바라보면 안된다는 것
그건은 접근하는 방법이고
SEF만 생각하고 접근을 하면 하면 한계가 있음
범위를 좁혀서 생각하는 것
목적 WSN 기반 IoT 이다.
범위가 넓을수록 유리함. 그 내에서 힘들면 범위가 넓어지면 유리 왜냐하면 데이터 소스가 많음 좁혀놓고 안되는걸 하려면
깊이들어가야 하기 때문에. low level로 내려갈 수록 지능과는 거리가 멀어짐
intelligence는 high level에 있는 것. 그걸 활용한는데 intelligence가 필요한 것.

SEF가 찾지 못하는 것은 그 이후에 개선하는 것은 못찾는 것을 찾아내는 것은 
+가능한 모든 가능성을 열어두고 생각을 해봐야함.

Trajectory를 사용한다고 해서 현실세계가 변하지 않는 것임.
시간이 오래 걸려도 괜찮은가?=>괜춘함 현실세계에서 생각해 보면 그렇게까지 오래 걸리지는 않음

compromise 되는 부분이 많은 경우에 발생하는 경우임->암만 추가를 해봤자 compromise가 되는 것임.
compromise가 거의 완벽하게 되는 경우에는 보안의 의미가 없음.
=>일반 노드인 경우에
=>일반 노드가 comrpomise 되는 동안
=>compromise가 일어나는 동안
=>compromise가 일어난 후에
=>한 노드가 compromise가 되는 동안에 정상적인 동작이 가능할까?: 불가능하다. compromise되는동안에 이벤트가 발생한다면
MAC을 생성할 수 없을 것 같다.
구성 요소+BS+IoT 통신 과정 모든 부분에 있어서 생각해 봐야함

Trajectory가 나타내고자 하는 것은 현실세계에서 발생하는 현상임.
System에서 일어나는 모든 일을 Trajectory라고 함
그것을 학교가 있으면 학교에서 일어나는 일들=Trajectory=>이걸 말로 안하고 diagram을 그리는 것이 Trajectory임
그건 표현 수단에 불가한것임. Trajectory는 그것들을 표현하기 위한 그래프임. 그런 형태도 있지만 그것이 의미하는 것은
일상 생활임 혹은 특정 시스템이라면 시스템에서 발생하는 모든 일들을 Trajectory라고 함.
시스템에서 발생하는 모든 일중에서 공격을 탐지할 수 있는 방법을 찾아내도록 해야함!!=>그게 Trajectory임
일상적으로 있을 수 있는 일인데 빈도수가 높다거나, 시간이 오래 걸렸다거나, 이런 부분으로 접근을 해야함.

특정 프로토콜뿐만 아니라 일반적인 현상에 대해서도 생각해 보면 Trajectory를 찾는데 더 도움이 됨!!

정보가 밝혀지면 그런 부분을 어떻게 활용할 수 있는가 하드웨어가 사용할 수 있는가에 대한 부분도 생각해 봐야함
그런 현상을 잡아내는 것이 더 중요함!!

창의적인 연구는 일반사고가 더 많은 비율을 차지 하는 것임. 특정 전공지식도 필요하지만 연구를 할 수 있는 기초적인 지식을 제공하는 것
전공지식만 습득해서는 사회에서는 쓸일이 없음. 