phase를 설명할 때 state는 영어로 작성하고 현재 한글로 적혀있는 부분은 설명으로 다시 작성할 것

{𝐿_𝐸, 𝑡, 𝐸}의 경우 단 하나라도 틀리다면 전혀 다른 내용의 이벤트가 되기 때문에 삭제 됨

drop 과 out을 구분만 가능하면 됨!!
drop은 점선, out은 실선

두가지 사항이 있음
-하나는 우선 결론만 보면은 100%잡아내는 것이 아님
=>점선으로 잡아내는 것은 확실히 잡아 내는 것
=>실선의 경우 완벽하게 잡아 내는 것은 아님

-완벽한 MAC의 복사
-완전한 MAC이 아닌 경우에 대한 것이었다는 것
결론은 분명히 100%는 아니기 때문에 나머지에 대해서 Trajectory에 대해서 생각해보면 됨!

실선하고 점선을 합치면 100%인가?
점선에 있는 것은 100%제대로 된 처리고? 실선 부분이 잘못 처리 될 수 있는 부분인것인가?

실선부분의 오류와 점선 부분의 오류를 처리를 할 방법에 대해 생각해 보는것!
그 제안을 Trajectory를 이용하는 부분으로 생각해 보는것
공간적인 값 말고 시간적인 개념을 추가해서 생각해보면 더 좋을 것이라는 의미
point value(공간값)말고 +시간적 개념을 추가하는 방법에 대해 생각해 볼것

그것만 가지고 해결될 수도 있지만, 100% 커버는 될 수 없음.
공간값만을 가지고 생각을 해도

그런것을 포함하되 시간적으로 연관 시켜서 
어려우면 공간값을 완벽하게 생각해보고 100% 커버가 되지 않는 부분을 시간적 부분과 연관 시켜서 생각해 보면 됨!!

실선 점선 합쳐서 실선에는 오류 있음, 점선에도 오류 있음. 그 오류는 현재 방법으로 못잡아 내기 때문에 오류라고 한것
그 오류를 Trajectory를 사용해서 잡아내는 것이 연구의 목표임!

공간적인 방법을 찾아서 했을 때 완벽하지 않은 부분에 대해서 시간적인 부분을 추가해서 연구하면 완벽에 가까워지는것임!!

공간적인 부분만으로 해결되지 않기 때문에 시간적인 부분이 추가가 되어야 됨!!
공간적인 부분만 가지고 했는데 해결이 되지 않아 발생한 오류가 있음
당연히 나머지는 시공간을 통해서 개선할 여지가 있음!!

표가 있는 상태에서 생각을 해야지 더 정확하게 구체적으로 진전을 볼 수 있는 것임!
포함이 안된 오류들의 성격이 어떤 것인가, 성격이 파악이 되면 timing diagram으로 그려보는 것 
그 성격은 현재 기법으로 탐지가 가능하지 않다. timing diagram으로 그리는게 거의 완성되어 가고 있는 과정임
Temporal logic으로 표현하고 그 뒤에 그게 탐지가 되면 결론이 나오는 것임!!
정체가 탄로가 난 것!
