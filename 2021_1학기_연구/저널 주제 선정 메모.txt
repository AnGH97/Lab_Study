논문의 제안기법

제안기법은 SEF를 기반으로 4단계로 구성된다. 
그 중보고서 생성 단계에서 SEF와 동일하게 이벤트가 발생하였을 경우 CoS노드가 주위 노드로부터 MAC을 모으고 보고서를 생성한다. 
이후 중간 노드들을 이용하여 보고서를 기지국으로 전송할 때 보고서에 Hop수를 추가하여 그림 1과 같은 형식으로 나타낸다.
웜홀을 통과한 경우 보고서가 그림 2와 같이 원래의 경로와 다른 경로로 이동하기 때문에 보고서의 Hop수가 달라진다. 
따라서 중간 노드에서 MAC을 확인할 때 Hop수를 추가적으로 확인하고, Hop수가 다르다면 중간 노드에서 보고서를 삭제한다. 
최종적으로 기지국에서 Hop수를 확인하였을 때 원래의 Hop수와 다르다면 웜홀이 있다고 판단하고 보고서를 삭제한다.

저널에 추가할 부분
이벤트 발생 위치, 이벤트 발생 시간, 이벤트 발생 내용, Index, MAC, Hop수, + 노드 ID(보고서가 지나온)
노드 ID를 추가한다. 
-> 노드를 지나가면서 중간 노드에서 확인을 할것인가(SEF)처럼 or 노드를 지나가면서는 확인을 안하고 BS에서만 확인을 할것이냐

1)노드를 지나가면서 중간 노드에서 확인을 하는 경우(SEF)처럼
->중간 노드들을 지나가면서 지나간 노드 ID마다encryption을 하고 원래의 경로로 왔는지 중간노드에서 확인하기 위해 
이전에 노드 ID에 대한 decryption이 필요하다. 이 부분이 중간 노드들을 지날 때마다 반복되기 때문에 
encryption과 decryption이 반복적으로 필요하다.
->에너지 효율성 많이 떨어진다. 하지만 매번 확인 하기 때문에 보안성은 높아진다.

2)노드를 지나가면서 확인하지 않고 BS에서만 확인을 하는 경우
->중간 노드들을 지나가면서 지나간 노드 ID에 대해서만 encryption을 하고 중간 노드에서 확인 하지 않기 때문에
decryption은 필요하지 않다. 최종적으로 BS에 도달한 경우에만 decryption을 한다.
->보안성 부분이 매번 확인 하는 위에 경우 보다는 좋지 않지만, 에너지 효율성 면에서 위에 경우 보다 좋다.

Hop수와 비교하였을때
현재 추가하려는 노드ID도 Hop수와 비슷한 성질을 갖고 있다.->결국 경로 부분에서 웜홀을 탐지 하는것
이때 Hop수는 암호화 없이 count로만 나타내었다.-> 이부분에 있어서 생각이 조금 필요
: 1)에 경우 Hop수는 encryption하지 않고 count로만 확인하는데, 노드 ID만을 encryption, decryption하는게 과연 의미가 있는가?
->웜홀 공격으로 인해 Hop수가 변경되는 경우가 존재. 노드 ID도 중간 노드에서 decryption하여 확인하기 때문에 그때 정보 변경 가능
그렇다면 원래의 논문과 비슷한 오류가 발생(예를 들면 웜홀에서 Hop수를 최소 Hop수로 변경하는 경우가 발생하는 것처럼
노드 ID를 본인의 것이 아닌 다른 노드의 ID로 정보 변경이 가능함)

: 2)에 경우 노드 ID를 encryption만 쭈욱 하는 경우->결국 경로부분에서 웜홀을 탐지하는것은 1번과 Hop수와 동일
그렇다면 encryption만 했을 때의 장점은?
->일단 중간 노드에서 decryption을 하지 않고 encryption만 하기 때문에 웜홀을 통과하더라도 정보 변경이 어렵다.
그렇다면 Hop수의 정보가 최소 Hop수로 변경되는 경우에도 BS에서 최종적으로 decryption해서 노드 ID의 정보와 비교하여 
웜홀 탐지가 가능

그렇다면 어떤게 보안성이 더 좋을까
2번!

결론

보고서의 형식을
->이벤트 발생 위치, 이벤트 발생 시간, 이벤트 발생 내용, Index, MAC, Hop수, + 노드ID(보고서가 지나온; 결국 경로임)
노드 ID를 계속적으로 encryption만 하고 최종적으로 BS에 도착하였을 때 decryption해서 잘못된 정보가 존재한다면 보고서 삭제

여기서 잘못된 정보의 종류
-노드ID의 정보
-노드ID의 개수->추가적으로는 Hop수와 노드ID수가 다른경우






